-- FUNCTION 1

CREATE OR REPLACE FUNCTION TOTAL_DEBIT(Code IN NUMBER)
RETURN NUMBER IS 
   debit NUMBER(10);
BEGIN
   SELECT SUM(SALARY) INTO debit FROM Employees
   WHERE ID = Code;
   
   RETURN debit;
EXCEPTION
  WHEN NO_DATA_FOUND THEN
     RETURN -1;
  WHEN OTHERS THEN
     RAISE;
END;
/


DECLARE 
  AMOUNT NUMBER(10);
BEGIN
  AMOUNT := TOTAL_DEBIT(5);
  DBMS_OUTPUT.PUT_LINE(AMOUNT);
END;
/

-- FUNCTION 2

CREATE OR REPLACE FUNCTION TOTAL_CREDIT(Code IN NUMBER)
RETURN NUMBER IS 
   total_debit NUMBER(10);
   total_credit NUMBER(10);
BEGIN 
   SELECT SUM(SALARY) INTO total_debit FROM Employees
   WHERE ID = Code;
   total_credit := total_debit + 100000;
   RETURN total_credit;
EXCEPTION
   WHEN NO_DATA_FOUND THEN
     RETURN -1;
   WHEN OTHERS THEN
     RAISE;
END;
/

DECLARE 
  PROFIT_AMOUNT NUMBER(10);
BEGIN
  PROFIT_AMOUNT := TOTAL_CREDIT(5);
  DBMS_OUTPUT.PUT_LINE(PROFIT_AMOUNT);
END;
/
-- FUNCTION 3
CREATE OR REPLACE FUNCTION TOTAL_PROFIT(Code IN NUMBER)
RETURN NUMBER IS
    debit NUMBER(10);
		credit NUMBER(10);
		profit NUMBER(10);
BEGIN
    debit := TOTAL_DEBIT(Code);
		credit := TOTAL_CREDIT(Code);
		profit := credit - debit;
		RETURN profit;
EXCEPTION
   WHEN NO_DATA_FOUND THEN
     RETURN -1;
   WHEN OTHERS THEN
     RAISE;
END;
/

DECLARE 
  PROFIT NUMBER(10);
BEGIN
  PROFIT := TOTAL_PROFIT(5);
  DBMS_OUTPUT.PUT_LINE(PROFIT);
END;
/
-- FUNCTION 4

CREATE OR REPLACE FUNCTION FIND_PLANE(FLIGHT IN NUMBER,TIME IN NUMBER)
RETURN VARCHAR2 IS 
   location VARCHAR2(50);
BEGIN
   SELECT PLACE INTO location 
	 FROM Location
	 WHERE (FLIGHT = Flight_No) AND( TIME >= Start_Time) AND ( TIME <= End_Time);
	 RETURN location;
EXCEPTION
   WHEN NO_DATA_FOUND THEN 
		 RETURN -1;
	 WHEN OTHERS THEN
		 RAISE; 
END;
/

DECLARE 
  locations VARCHAR2(50);
BEGIN
  locations := FIND_PLANE(15,5.1);
	DBMS_OUTPUT.PUT_LINE(locations);
END;